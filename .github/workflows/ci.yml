name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system deps
        run: sudo apt-get update && sudo apt-get install -y libpq-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pre-commit (lint)
        run: |
          pip install pre-commit
          pre-commit run --all-files --show-diff-on-failure

      - name: Wait for Postgres
        run: |
          for i in {1..10}; do
            (echo > /dev/tcp/127.0.0.1/5432) >/dev/null 2>&1 && break
            sleep 2
          done

      - name: Django checks and migrations
        env:
          DJANGO_SECRET_KEY: dummy
          DJANGO_DEBUG: "False"
          DJANGO_ALLOWED_HOSTS: localhost,127.0.0.1
          DB_ENGINE: django.db.backends.postgresql
          DB_NAME: postgres
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: 127.0.0.1
          DB_PORT: "5432"
        run: |
          python manage.py collectstatic --noinput || true
          python manage.py migrate --noinput

      - name: Run tests with coverage
        env:
          DJANGO_SECRET_KEY: dummy
          DJANGO_DEBUG: "False"
          DJANGO_ALLOWED_HOSTS: localhost,127.0.0.1
          DB_ENGINE: django.db.backends.postgresql
          DB_NAME: postgres
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: 127.0.0.1
          DB_PORT: "5432"
        run: |
          pytest --cov=./ --cov-report=xml --cov-report=term-missing -q
          # Enforce minimum coverage (adjust threshold as needed)
          coverage report --fail-under=85

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          fail_ci_if_error: true

